<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation=" http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.ge.hc.oru</groupId>
    <artifactId>oruadapter</artifactId>
    <name>oruadapter</name>
    <version>2.0.7-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <!-- libraries -->
        <ipf-version>2.6.0</ipf-version>
        <groovy-version>2.1.6</groovy-version>
        <!-- plugins -->
        <assembly-plugin-version>2.4</assembly-plugin-version>
        <eclipse-plugin-version>2.8</eclipse-plugin-version>
        <!-- libraries -->
        <gmaven-version>1.4</gmaven-version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.openehealth.ipf</groupId>
                <artifactId>ipf</artifactId>
                <version>${ipf-version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- dependencies for production -->
        <dependency>
            <groupId>org.openehealth.ipf.platform-camel</groupId>
            <artifactId>ipf-platform-camel-core</artifactId>
            <version>${ipf-version}</version>
        </dependency>
        <dependency>
            <groupId>org.openehealth.ipf.platform-camel</groupId>
            <artifactId>ipf-platform-camel-ihe-mllp</artifactId>
            <version>${ipf-version}</version>
        </dependency>
        <dependency>
            <groupId>org.openehealth.ipf.platform-camel</groupId>
            <artifactId>ipf-platform-camel-hl7</artifactId>
            <version>2.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.openehealth.ipf.modules</groupId>
            <artifactId>ipf-modules-hl7dsl</artifactId>
            <version>2.6.0</version>
        </dependency>
        <dependency>
            <groupId>ca.uhn.hapi</groupId>
            <artifactId>hapi-structures-v23</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>ca.uhn.hapi</groupId>
            <artifactId>hapi-structures-v24</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>ca.uhn.hapi</groupId>
            <artifactId>hapi-structures-v25</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-hl7</artifactId>
            <version>2.12.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-mina2</artifactId>
            <version>2.12.2</version>
        </dependency>
        <dependency>
            <groupId>org.openehealth.ipf.commons</groupId>
            <artifactId>ipf-commons-ihe-xds</artifactId>
            <version>2.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.openehealth.ipf.platform-camel</groupId>
            <artifactId>ipf-platform-camel-ihe-xds</artifactId>
            <version>2.6.0</version>
        </dependency>

        <dependency>
            <groupId>org.openehealth.ipf.commons</groupId>
            <artifactId>ipf-commons-map</artifactId>
            <version>2.6.0</version>
        </dependency>


        <!-- dependencies for test -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <!--dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency-->
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${assembly-plugin-version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>gmaven-plugin</artifactId>
                    <version>${gmaven-version}</version>
                    <configuration>
                        <providerSelection>1.8</providerSelection>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.gmaven.runtime</groupId>
                            <artifactId>gmaven-runtime-1.8</artifactId>
                            <version>${gmaven-version}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>org.codehaus.groovy</groupId>
                                    <artifactId>groovy-all</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                        <dependency>
                            <groupId>org.codehaus.groovy</groupId>
                            <artifactId>groovy-all</artifactId>
                            <version>${groovy-version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>${eclipse-plugin-version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <!-- This seems to be the only way to add the .groovy source files -->
                <!-- in src/main/groovy to the Eclipse build path. -->
                <!-- The source files have to be excluded binaries explicitly (see maven-jar-plugin config). -->
                <directory>src/main/groovy</directory>
            </resource>
            <resource>
                <directory>.</directory>
                <includes>
                    <include>META-INF/**/*</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <!--configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration-->
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/bin.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generateStubs</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>generateStubs</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>

                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
                <configuration>
                    <projectnatures>
                        <projectnature>org.eclipse.jdt.core.javanature</projectnature>
                        <projectnature>org.eclipse.jdt.groovy.core.groovyNature</projectnature>
                    </projectnatures>
                    <downloadSources>true</downloadSources>
                    <ajdtVersion>none</ajdtVersion>
                    <classpathContainers>
                        <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
                        <!-- Add explicitly the groovy libs. Groovy nature alone seems not to be enough. -->
                        <classpathContainer>GROOVY_SUPPORT</classpathContainer>
                    </classpathContainers>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>openehealth.releases</id>
            <name>Open eHealth Maven Repository</name>
            <url>http://repo.openehealth.org/maven2/releases</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>maven</id>
            <name>Maven Repository</name>
            <url>http://repo.maven.apache.org/maven2/</url>
        </repository>
        <repository>
            <id>openehealth.snapshots</id>
            <name>Open eHealth Maven Repository</name>
            <url>http://repo.openehealth.org/maven2/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>codehaus nexus</id>
            <name>Codehaus Nexus Maven Repository</name>
            <url>https://nexus.codehaus.org/content/repositories/releases/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>codehaus</id>
            <name>Codehaus Maven Repository</name>
            <url>http://repository.codehaus.org</url>
        </repository>
        <repository>
            <id>java.net</id>
            <name>java.net Maven Repository</name>
            <url>http://download.java.net/maven/2/</url>
        </repository>
        <repository>
            <id>pentaho</id>
            <name>pentaho</name>
            <url>http://repository.pentaho.org/</url>

        </repository>
        <repository>
            <id>jboss</id>
            <name>JBoss Maven Repository</name>
            <url>http://repository.jboss.com/maven2</url>
        </repository>
    </repositories>

</project>
